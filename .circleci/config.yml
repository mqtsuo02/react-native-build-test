version: 2
jobs:
  deploy:
    docker:
      - image: google/cloud-sdk
        environment:
          - CLUSTER_NAME: graphql-demo-cluster
          - CONTAINER_PORT: 80
          - CONTAINER_TARGET_PORT: 4000
          - DEPLOYMENT_NAME: graphql-demo
          - IMAGE_NAME: graphql-demo
          - IMAGE_VERSION: v1
    steps:
      - checkout
      - run:
          name: Configurate GCP
          command: |
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - run:
          name: Build the production image
          command: |
            gcloud container builds submit --tag=gcr.io/${GOOGLE_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_VERSION} .
            gcloud container images list
      - run:
          name: Delete deployment
          command: |
            kubectl delete service --ignore-not-found ${DEPLOYMENT_NAME}
            kubectl delete deployment --ignore-not-found ${DEPLOYMENT_NAME}
      - run:
          name: Create a Kubernetes cluster
          command: |
            gcloud config set container/cluster ${CLUSTER_NAME}
            sed -i -e "s/GOOGLE_PROJECT_ID/${GOOGLE_PROJECT_ID}/g" deploy.yml
            sed -i -e "s/IMAGE_NAME/${IMAGE_NAME}/g" deploy.yml
            sed -i -e "s/IMAGE_VERSION/${IMAGE_VERSION}/g" deploy.yml
            kubectl create -f deploy.yml
            kubectl get pods
      - run:
          name: Expose deployment
          command: |
            kubectl expose deployment ${DEPLOYMENT_NAME} --type=LoadBalancer --port ${CONTAINER_PORT} --target-port ${CONTAINER_TARGET_PORT}
            kubectl get service
workflows:
  version: 2
  build:
    jobs:
      - deploy
